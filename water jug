h=int(input("enter large jug volume"))
l=int(input("enter small jug volume"))
inst=list(map(int,(input("enter intial state").split(' '))))
gs=int(input("enter goal state"))

def rules(x,y):
  if(x<h):
    q.append([h,y])
  if(y<l):
    q.append([x,l])
  if(x>0):
    q.append([0,y])
  if(y>0):
    q.append([x,0])
  if(x+y<=h and y>0):
    q.append([x+y,0])
  if(x+y<=l and x>0):
    q.append([0,x+y])
  if(x+y>=h and y>0):
    q.append([h,(x+y)-h])
  if(x+y>=l and x>0):
    q.append([(x+y)-l,l])

def bfs():
  q.append(inst)
  while q:
    m=q.pop()
    if m not in v:
      v.append(m)
      if gs in m:
        return v
      rules(m[0],m[1])
  return -1
q=[]
v=[]
r=bfs()
if(r==-1):
  print("not found")
else:
  for i in r:
    print(i)
